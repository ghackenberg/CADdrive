@article{Hackenberg_2023,
  title   = {GITHUB FOR PRODUCT DEVELOPMENT - HOW COULD THAT LOOK LIKE?},
  volume  = {3},
  doi     = {10.1017/pds.2023.206},
  journal = {Proceedings of the Design Society},
  author  = {Hackenberg, Georg and Zehetner, Christian and Frühwirth, Dominik},
  year    = {2023},
  pages   = {2055–2064}
}
@article{Grieves_2005,
  author   = {Grieves, Michael W.},
  title    = {Product lifecycle management: the new paradigm for enterprises},
  journal  = {International Journal of Product Development},
  volume   = {2},
  number   = {1-2},
  pages    = {71-84},
  year     = {2005},
  doi      = {10.1504/IJPD.2005.006669},
  url      = {https://www.inderscienceonline.com/doi/abs/10.1504/IJPD.2005.006669},
  eprint   = {https://www.inderscienceonline.com/doi/pdf/10.1504/IJPD.2005.006669},
  abstract = { Product Lifecycle Management (PLM) is a developing paradigm. One way to develop an understanding of PLM's characteristic and boundaries is to propose models that help us conceptualise both holistic and component views in compact packages. Models can give us both a rich way of thinking about overall concepts and can identify areas where we need to explore issues that such models raise. In this paper, the author proposes and discusses two such related models, the Product Lifecycle Management Model (PLM Model) and the Mirrored Spaces Model (MSM) and investigates the conceptual and technical issues raised by these models. }
}
@article{TonyLui_2001,
  title    = {A review of web-based product data management systems},
  journal  = {Computers in Industry},
  volume   = {44},
  number   = {3},
  pages    = {251-262},
  year     = {2001},
  issn     = {0166-3615},
  doi      = {https://doi.org/10.1016/S0166-3615(01)00072-0},
  url      = {https://www.sciencedirect.com/science/article/pii/S0166361501000720},
  author   = {D. {Tony Liu} and X. {William Xu}},
  keywords = {Product data management, Computer-aided design, Enterprise resource planning, Web-technology},
  abstract = {Product data management (PDM) integrates and manages all the information that defines a product, from design to manufacture, and to end-user support. PDM can be seen as an integration tool connecting many different areas, which ensures that the right information in the right form is available to the right person at the right time. When properly implemented, PDM systems will result in faster work, fewer errors, less redundancy, and smoother workflow for an organization. A recent advance in PDM technology concerns with the use of web-based technologies. The objective of this paper is to review PDM technology in general, and discuss the web-based PDM systems in particular. The emphasis is given toward the integration of PDM methodology with web architecture, and how this new infrastructure enhances a traditional PDM system. To reinforce the argument, a number of currently available PDM systems that have embraced web-technologies are reviewed, and some industrial implementations are presented.}
}
@inbook{Grieves_2017,
  author    = {Grieves, Michael and Vickers, John},
  editor    = {Kahlen, Franz-Josef and Flumerfelt, Shannon and Alves, Anabela},
  title     = {Digital Twin: Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems},
  booktitle = {Transdisciplinary Perspectives on Complex Systems: New Findings and Approaches},
  year      = {2017},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {85--113},
  abstract  = {Systems do not simply pop into existence. They progress through lifecycle phases of creation, production, operations, and disposal. The issues leading to undesirable and unpredicted emergent behavior are set in place during the phases of creation and production and realized during the operational phase, with many of those problematic issues due to human interaction. We propose that the idea of the Digital Twin, which links the physical system with its virtual equivalent can mitigate these problematic issues. We describe the Digital Twin concept and its development, show how it applies across the product lifecycle in defining and understanding system behavior, and define tests to evaluate how we are progressing. We discuss how the Digital Twin relates to Systems Engineering and how it can address the human interactions that lead to ``normal accidents.'' We address both Digital Twin obstacles and opportunities, such as system replication and front running. We finish with NASA's current work with the Digital Twin.},
  isbn      = {978-3-319-38756-7},
  doi       = {10.1007/978-3-319-38756-7_4},
  url       = {https://doi.org/10.1007/978-3-319-38756-7_4}
}
@inproceedings{Ross_1963,
  author    = {Ross, Douglas T. and Rodriguez, Jorge E.},
  title     = {Theoretical foundations for the computer-aided design system},
  year      = {1963},
  isbn      = {9781450378802},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1461551.1461589},
  doi       = {10.1145/1461551.1461589},
  abstract  = {A Computer-Aided Design System for general use must have a unique and powerful organization. Even the simplest of design problems involves the exercise of many disciplines and the carrying out of many types of activity. Since the area of applicability of the design system is to be essentially unlimited, we know from the beginning that the system itself must be very large and complex. Even though only a few of its features may be exercised on any given design problem, there is no way of predicting which portions of the system will be required nor how they will be used. Furthermore the designer or engineer who is using the system cannot be expected to be a computer programmer, and it must be possible for him to carry out his design function in a way which is natural to him, and without his being aware that the statements and actions that he performs are in fact constructing and executing large numbers of highly complex computer programs. Although to be sure the user must learn and become facile with the basic vocabulary and manipulations of the system, the system must be so designed that he finds his normal thought processes aided, augmented, and stimulated by the use of the system in such a way that he is able to think almost entirely at the concept level within his own field of interest, while at the same time carrying out data processing activities of extreme complexity.},
  booktitle = {Proceedings of the May 21-23, 1963, Spring Joint Computer Conference},
  pages     = {305–322},
  numpages  = {18},
  location  = {Detroit, Michigan},
  series    = {AFIPS '63 (Spring)}
}
﻿@article{Philpotts_1996,
  author    = {Philpotts, Mike},
  title     = {An introduction to the concepts, benefits and terminology of product data management},
  journal   = {Industrial Management {\&} Data Systems},
  year      = {1996},
  month     = {Jan},
  day       = {01},
  publisher = {MCB UP Ltd},
  volume    = {96},
  number    = {4},
  pages     = {11-17},
  abstract  = {Product data management (PDM) systems help to keep track of the masses of information needed to design, manufacture or build products and then to maintain them. They can be applied to a wide range of products and industries and across the whole spectrum of organizational functions. Benefits extend far beyond engineering design to include cost savings in manufacturing, reduced time to market and increased product quality. Defines and describes the type of features and functions that should be found in a PDM system and addresses the following: data vault and document management; workflow and process management; product structure management; classification; project management; communication and notification; data transport and translation; image services; system administration; and PDM environments.},
  issn      = {0263-5577},
  doi       = {10.1108/02635579610117467},
  url       = {https://doi.org/10.1108/02635579610117467}
}
@article{Kraemer_1988,
  author     = {Kraemer, Kenneth L. and King, John Leslie},
  title      = {Computer-based systems for cooperative work and group decision making},
  year       = {1988},
  issue_date = {June 1988},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {20},
  number     = {2},
  issn       = {0360-0300},
  url        = {https://doi.org/10.1145/46157.46158},
  doi        = {10.1145/46157.46158},
  abstract   = {Application of computer and communications technology to cooperative work and group decision making has grown out of three traditions: computer-based communications, computer:based information service provision, and computer-based decision support. This paper reviews the group decision support systems (GDSSs) that have been configured to meet the needs of groups at work, and evaluates the experience to date with such systems. Progress with GDSSs has proved to be slower than originally anticipated because of shortcomings with available technology, poor integration of the various components of the computing package, and incomplete understanding of the nature of group decision making. Nevertheless, the field shows considerable promise with respect to the creation of tools to aid in group decision making and the development of sophisticated means of studying the dynamics of decision making in groups.},
  journal    = {ACM Comput. Surv.},
  month      = {jul},
  pages      = {115–146},
  numpages   = {32}
}
@inproceedings{Bokder_1988,
  author    = {B\o{}dker, Susanne and Ehn, Pelle and Knudsen, Joergen and Kyng, Morten and Madsen, Kim},
  title     = {Computer support for cooperative design (invited paper)},
  year      = {1988},
  isbn      = {0897912829},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/62266.62296},
  doi       = {10.1145/62266.62296},
  abstract  = {Computer support for design as cooperative work is the subject of our discussion in the context of our research program on Computer Support in Cooperative Design and Communication. We outline our theoretical perspective on design as cooperative work, and we exemplify our approach with reflections from a project on computer support for envisionment in design — the APLEX and its use. We see envisionment facilities as support for both experiments with and communication about the future use situation. As a background we sketch the historical roots of our program — the Scandinavian collective resource approach to design and use of computer artifacts, and make some critical reflections on the rationality of computer support for cooperative work.},
  booktitle = {Proceedings of the 1988 ACM Conference on Computer-Supported Cooperative Work},
  pages     = {377–394},
  numpages  = {18},
  location  = {Portland, Oregon, USA},
  series    = {CSCW '88}
}
﻿@article{Vezzetti_2009,
  author   = {Vezzetti, Enrico},
  title    = {Product lifecycle data sharing and visualisation: Web-based approaches},
  journal  = {The International Journal of Advanced Manufacturing Technology},
  year     = {2009},
  month    = {Mar},
  day      = {01},
  volume   = {41},
  number   = {5},
  pages    = {613-630},
  abstract = {Both product design and manufacturing are intrinsically collaborative processes. From conception and design to project completion and ongoing maintenance, all points in the lifecycle of any product involve the work of fluctuating teams of designers, suppliers and customers. That is why companies are involved in the creation of a distributed design and a manufacturing environment which could provide an effective way to communicate and share information throughout the entire enterprise and the supply chain. At present, the technologies that support such a strategy are based on World Wide Web platforms and follow two different paths. The first one focuses on 2D documentation improvement and introduces 3D interactive information in order to add knowledge to drawings. The second one works directly on 3D models and tries to extend the life of 3D data moving these design information downstream through the entire product lifecycle. Unfortunately the actual lack of a unique 3D Web-based standard has stimulated the growing up of many different proprietary and open source standards and, as a consequence, a production of an incompatible information exchange over the WEB. This paper proposes a structured analysis of Web-based solutions, trying to identify the most critical aspects to promote a unique 3D digital standard model capable of sharing product and manufacturing data more effectively---regardless of geographic boundaries, data structures, processes or computing environment.},
  issn     = {1433-3015},
  doi      = {10.1007/s00170-008-1503-8},
  url      = {https://doi.org/10.1007/s00170-008-1503-8}
}
﻿@article{Bentley_1997,
  author   = {Bentley, Richard and Horstmann, Thilo and Trevor, Jonathan},
  title    = {The World Wide Web as Enabling Technology for CSCW: The Case of BSCW},
  journal  = {Computer Supported Cooperative Work (CSCW)},
  year     = {1997},
  month    = {Jun},
  day      = {01},
  volume   = {6},
  number   = {2},
  pages    = {111-134},
  abstract = {Despite the growth of interest in the field of CSCW,and the increasingly large number of systems whichhave been developed, it is still the case that fewsystems have been adopted for widespread use. This isparticularly true for widely-dispersed, cross-organisational working groups where problems ofheterogeneity in computing hardware and softwareenvironments inhibit the deployment of CSCWtechnologies. With a lightweight and extensibleclient-server architecture, client implementations forall popular computing platforms, and an existing userbase numbered in millions, the World Wide Web offersgreat potential in solving some of these problems toprovide an `enabling technology' for CSCWapplications. We illustrate this potential using ourwork with the BSCW shared workspace system -- anextension to the Web architecture which provides basicfacilities for collaborative information sharing fromunmodified Web browsers. We conclude that despitelimitations in the range of applications which can bedirectly supported, building on the strengths of theWeb can give significant benefits in easing thedevelopment and deployment of CSCW applications.},
  issn     = {1573-7551},
  doi      = {10.1023/A:1008631823217},
  url      = {https://doi.org/10.1023/A:1008631823217}
}
@article{Ogren_2000,
  author   = {Ogren, Ingmar},
  title    = {On principles for model-based systems engineering},
  journal  = {Systems Engineering},
  volume   = {3},
  number   = {1},
  pages    = {38-49},
  doi      = {https://doi.org/10.1002/(SICI)1520-6858(2000)3:1<38::AID-SYS3>3.0.CO;2-B},
  url      = {https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291520-6858%282000%293%3A1%3C38%3A%3AAID-SYS3%3E3.0.CO%3B2-B},
  eprint   = {https://incose.onlinelibrary.wiley.com/doi/pdf/10.1002/%28SICI%291520-6858%282000%293%3A1%3C38%3A%3AAID-SYS3%3E3.0.CO%3B2-B},
  abstract = {Abstract This article addresses the problem of consolidating technical descriptions of how a system is built with operational descriptions of the missions the system shall complete (how the system is to be used). It also discusses how a central model constituted from design objects with requirements, test cases, problems and documents as attributes, to these design objects, can support modern principles for “incremental acquisition” and “incremental development.” Modeling principles, based on entity–relationship diagrams and the UML (Unified Modeling Language) component diagram, combined with pseudo code behavioral descriptions, are described as means to build the “central model.” After a “central model” for systems engineering is established, it is shown how the model can be extended into a “Common Project Model,” being common in two ways: common for “real implementations” and simulators required for the system; common for all concerned stakeholders such as acquirers and contractors. Application of the “Common Project Modeling” principle, with computer-stored models, holds promises for increased system quality and for more efficient systems engineering. © 2000 John Wiley \& Sons, Inc. Syst Eng 3: 38–49, 2000},
  year     = {2000}
}
